{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","Swal","fire","icon","text","className","id","type","value","onChange","target","placeholder","htmlFor","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"sNAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,uBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,KAEdO,IAAKC,KAAK,CACNC,KAAM,QACNC,KAAM,2BAMgBC,UAAU,oBAAxC,UACI,uBACIC,GAAG,WACHD,UAAU,cACVE,KAAK,OACLC,MAAOf,EACPgB,SAxBc,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACnCd,EAAcc,IAwBNG,YAAY,iBAEhB,uBAAOC,QAAQ,WAAWP,UAAU,cAApC,8B,gCCnCCQ,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAQrB,MAAO,CAAElB,GADLkB,EALFlB,GAMWmB,MADTD,EAJFC,MAKkBT,IADhBQ,EAHFE,OACEC,iBAAoBX,QAXP,kBAiBZM,GAjBY,4CAAH,sDCaPM,EAAc,SAAC,GAAuB,EAArBtB,GAAsB,IAAlBmB,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAErC,OACI,sBAAKX,UAAU,8CAAf,UACI,qBAAKwB,IAAKb,EAAKc,IAAKL,IACpB,4BAAG,4BAAIA,UCdNM,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BtB,mBAAS,CACjC6B,KAAM,GACNW,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRtB,EAAQC,GAAUsB,MAAK,SAACV,GACtBQ,EAAS,CACPb,KAAMK,EACNM,SAAS,SAGZ,CAAClB,IAEGmB,EDbwBI,CAAcvB,GAAjCY,EAAZ,EAAOL,KAAaW,EAApB,EAAoBA,QAEpB,OACE,qCACE,6BAAKlB,IAEHkB,GAAW,2CAEb,qBAAK3B,UAAU,YAAf,SACGqB,EAAOH,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,eAGMA,GAFCA,EAAMhC,aEZViC,EAAe,WAIxB,MAAoC/C,mBAAS,CAAC,eAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,8BACKS,EAAWuB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCjB7B0B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6611542.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ({ target: { value } }) => {\r\n        setInputValue(value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: 'Ingresa una categoria',\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form__group field\">\r\n            <input \r\n                id=\"category\"\r\n                className=\"form__field\"\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                placeholder=\"Categoría\"\r\n            />\r\n            <label htmlFor=\"category\" className=\"form__label\">Categoría</label>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fTKgjD3hphcXUNMdGAiotFKT47LykLTI`;\r\n    const response = await fetch(url);\r\n\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      const {\r\n        id,\r\n        title,\r\n        images: {\r\n          downsized_medium: { url },\r\n        },\r\n      } = img;\r\n      return { id, title, url };\r\n    });\r\n\r\n    return gifs\r\n  };","import React from 'react'\r\n\r\n\r\n//export const GifGridItem = ( {image:{title}} ) => {\r\n\r\n//    console.log(title);\r\n//    return (\r\n//        <div>\r\n//            {title}\r\n//        </div>\r\n//    )\r\n//}\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInRight\">\r\n            <img src={url} alt={title} />\r\n            <p><i>{title}</i></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const {data:images, loading} = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      { loading && <p>Loading...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((image) => (\r\n          <GifGridItem\r\n            key={image.id}\r\n            //image={image}\r\n            {...image}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((images) => {\r\n      setState({\r\n        data: images,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n//    const categories = ['One Punch', 'The Office'];\r\n\r\n    const [categories, setCategories] = useState(['The Office']);\r\n\r\n    //const handleAdd = () => {\r\n        //setCategories(['New', ...categories]);\r\n    //    setCategories(categories => ['Nuevo', ...categories]);//set recibe un callback\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <div>\r\n                {categories.map( category => (\r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}